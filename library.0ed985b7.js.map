{"mappings":"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","sources":["src/js/create-gallery-library.js","src/js/library.js","src/js/modal-library.js"],"sourcesContent":["export const locStorage = {\n  genres: \"genres\",\n};\n\nexport const defaulPosterImg = \"https://i.ibb.co/1dYzZxK/Filmoteka-dummy.jpg\";\n\nexport function createGalleryMarkupLibrary(imagesArray) {\n  const refs = {\n    gallery: document.querySelector(\".gallery\"),\n  };\n\n  refs.gallery.innerHTML = imagesArray\n    .map(image => {\n      const { poster_path, title, genre_ids, release_date, id, vote_average } =\n        image;\n      const releaseYear = release_date ? release_date.slice(0, 4) : \" No year\";\n\n      //Встановлення заглушки для постеру\n      const srcPath =\n        poster_path === null\n          ? defaulPosterImg\n          : `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n      return `\n               <div class=\"card\" movie-id=\"${id}\">\n               <img class=\"card__poster\"  src=${srcPath} alt\n               =\"poster movie ${title}\"  loading=\"lazy\" width=\"320px\" height=\"210px\" />\n                    <div  class=\"card__info\">\n                        <p class=\"info__title\"><b>${title}</b><br/>\n                        </p>\n                        <p ><b class=\"info__genre\">${getGenreNames(\n                          genre_ids\n                        )}</b>\n                       <span class=\"info__span\"> | </span>\n                        <b class=\"info__release-date\">${releaseYear}</b>\n                      <span class=\"info__vote_average\">${vote_average.toFixed(\n                        1\n                      )}</span>\n                        </p>\n                    </div>\n                </div>\n            `;\n    })\n    .join(\"\");\n}\n\n/**Повертає імена жанрів за вказаними номерами */\nexport function getGenreNames(genreIDs) {\n  let genres;\n  let parsedGenres;\n  try {\n    genres = localStorage.getItem(locStorage.genres);\n    parsedGenres = JSON.parse(genres);\n  } catch (error) {\n    console.log(\"getGenreNames() error: \", error.message);\n  }\n\n  let genresNames = \"\";\n  for (let i = 0; i < genreIDs.length; i++) {\n    const genreID = genreIDs[i];\n\n    if (i > 1) {\n      genresNames += \"Other\";\n      return genresNames;\n    }\n\n    parsedGenres.map(genre => {\n      if (genreID === genre.id) {\n        genresNames += genre.name + \", \";\n      }\n    });\n  }\n  return genresNames.slice(0, -2);\n}\n","import { createGalleryMarkupLibrary } from './create-gallery-library';\nimport { getLocalStorage } from './LocaleStorageApi';\n\nimport Pagination from 'tui-pagination';\nimport { paginationOptions } from './projectOptions';\nlet KEY = '';\nexport let moviesFromStorage = '';\nconst CARDS_PER_PAGE = 1000;\nconst refs = {\n  btnWatched: document.querySelector('.watched'),\n  btnQueue: document.querySelector('.queue'),\n  btnList: document.querySelector('.library-header__buttons'),\n  libraryGallery: document.querySelector('.gallery'),\n  loader: document.querySelector('.loader'),\n  noItemsImg: document.querySelector('.library__no-items'),\n  tuiContainer: document.getElementById('tui-pagination-container'),\n};\n\nwindow.addEventListener('load', () => {\n  refs.btnQueue.click();\n});\n\nrefs.btnList.addEventListener('click', onBtnClick);\n\nfunction onBtnClick(evt) {\n  try {\n    let { name: key, tagName } = evt.target;\n    KEY = key.toUpperCase();\n    if (tagName !== 'BUTTON') return;\n\n    switch (KEY) {\n      case 'QUEUE':\n        refs.btnQueue.classList.add('library-header__button--active');\n        refs.btnWatched.classList.remove('library-header__button--active');\n        break;\n      case 'WATCHED':\n        refs.btnWatched.classList.add('library-header__button--active');\n        refs.btnQueue.classList.remove('library-header__button--active');\n        break;\n      default:\n        break;\n    }\n\n    moviesFromStorage = getLocalStorage(KEY);\n    const totalCards = moviesFromStorage.length;\n    const totalPages = Math.ceil(totalCards / CARDS_PER_PAGE);\n    if (totalPages < 2) {\n      refs.tuiContainer.style.display = 'none';\n    }\n\n    const paginaton = new Pagination(refs.tuiContainer, {\n      ...paginationOptions,\n      totalItems: totalPages,\n    });\n\n    paginaton.on('afterMove', aferMovePagination);\n\n    if (!moviesFromStorage.length) {\n      refs.libraryGallery.innerHTML = '';\n      refs.noItemsImg.style.display = 'block';\n      refs.loader.classList.add('is-hidden');\n      return;\n    }\n\n    refs.loader.classList.add('is-hidden');\n    refs.noItemsImg.style.display = 'none';\n    const sliced = cutDataForPagination(moviesFromStorage);\n    makePagination(1, sliced);\n  } catch (error) {\n    console.log(error);\n    refs.libraryGallery.innerHTML = '';\n  } finally {\n    return KEY, moviesFromStorage;\n  }\n}\n\nexport function refreshLibrary() {\n  switch (KEY) {\n    case 'QUEUE':\n      refs.btnQueue.click();\n      break;\n    case 'WATCHED':\n      refs.btnWatched.click();\n      break;\n    default:\n      break;\n  }\n}\n\nfunction aferMovePagination(event) {\n  const currentPage = event.page;\n  makePagination(currentPage, moviesFromStorage);\n  scrollSmooth.to(0);\n}\n\nexport function makePagination(page = 1, moviesForPagination) {\n  const cuttedDataPagination = cutDataForPagination(moviesForPagination);\n  const pageMovies = cuttedDataPagination[0][page - 1];\n  createGalleryMarkupLibrary(pageMovies);\n}\n\nfunction cutDataForPagination(DataArray) {\n  const totalCards = moviesFromStorage.length;\n  const totalPages = Math.ceil(totalCards / CARDS_PER_PAGE);\n  let newDataArray = [];\n  for (let i = 0; i < totalPages; i += 1) {\n    const firstMovieOnPage = i * CARDS_PER_PAGE;\n    const lastMovieOnPage = (i + 1) * CARDS_PER_PAGE;\n    newDataArray.push(DataArray.slice([firstMovieOnPage], [lastMovieOnPage]));\n  }\n  return newDataArray;\n}\n","import { moviesFromStorage } from \"./library\";\nimport { getGenreNames } from \"./create-gallery-library\";\n\nconst storageKeys = {\n  watched: \"WATCHED\",\n  queue: \"QUEUE\",\n};\nconst buttonStates = {\n  on: \"REMOVE FROM\",\n  off: \"ADD TO\",\n};\n\nconst addWatchedBtn = document.querySelector(\".watched-btn\");\nconst addQueueBtn = document.querySelector(\".queue-btn\");\n\naddWatchedBtn.addEventListener(\"click\", onAddWatchedBtn);\naddQueueBtn.addEventListener(\"click\", onAddQueueBtn);\n\nfunction storageHasMovie(storageKey, movieID) {\n  let storageMoviesStr;\n  try {\n    storageMoviesStr = localStorage.getItem(storageKey);\n    //Якщо сховище не пусте\n    if (storageMoviesStr) {\n      let storageMoviesObj = JSON.parse(storageMoviesStr);\n\n      for (let i = 0; i < storageMoviesObj.length; i++) {\n        if (storageMoviesObj[i].id === movieID) {\n          return true;\n        }\n      }\n    }\n  } catch (error) {\n    console.log(\"storageHasMovie() error: \" + error);\n  }\n  return false;\n}\n\nimport { refreshLibrary } from \"./library\";\n\nexport let btnState = {\n  watched: false,\n  queue: false,\n};\nexport let currentMovie;\n\nconst refs = {\n  libraryGallery: document.querySelector(\".gallery\"),\n};\n\nrefs.libraryGallery.addEventListener(\"click\", handleDataModal);\ndocument.querySelector(\".modal__close\").addEventListener(\"click\", closeModal);\n\nexport function handleDataModal(e) {\n  const defaulPosterImg = \"https://i.ibb.co/1dYzZxK/Filmoteka-dummy.jpg\";\n  let targetItem = e.target;\n  if (targetItem.closest(\".card\")) {\n    const movieId = targetItem.closest(\".card\").getAttribute(\"movie-id\");\n    const data = moviesFromStorage;\n    const movie = data.find(item => {\n      if (Number(movieId) === item.id) {\n        return true;\n      }\n    });\n    currentMovie = movie;\n\n    const srcPath =\n      movie.poster_path === null\n        ? defaulPosterImg\n        : `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n    document\n      .querySelector(\".content-card__img>img\")\n      .setAttribute(\"src\", srcPath);\n    document.querySelector(\".content-card__title\").innerText = movie.title;\n    document.querySelector(\".content-card__about-text\").innerText =\n      movie.overview;\n\n    document.querySelector(\".modal__movie-bord\").innerText =\n      movie.vote_average.toFixed(1);\n    document.querySelector(\".modal__movie-number\").innerText = movie.vote_count;\n    document.querySelector(\".modal__movie-popularity\").innerText =\n      movie.popularity.toFixed(1);\n    document.querySelector(\".modal__movie-original\").innerText =\n      movie.original_title;\n    document.querySelector(\".modal__movie-genres\").innerText = getGenreNames(\n      movie.genre_ids\n    );\n\n    openModal();\n  }\n}\n\n// открытие модалки\n// =====================================\nexport function openModal() {\n  document.querySelector(\".backdrop\").style.display = \"block\";\n  document.querySelector(\"body\").style.overflowY = \"hidden\";\n\n  //Встановлення тексту кнопки \"ADD TO WATCHED\"\n  if (storageHasMovie(storageKeys.watched, currentMovie.id)) {\n    addWatchedBtn.textContent = buttonStates.on + \" \" + storageKeys.watched;\n  } else {\n    addWatchedBtn.textContent = buttonStates.off + \" \" + storageKeys.watched;\n  }\n\n  //Встановлення тексту кнопки \"ADD TO QUEUE\"\n  if (storageHasMovie(storageKeys.queue, currentMovie.id)) {\n    addQueueBtn.textContent = buttonStates.on + \" \" + storageKeys.queue;\n  } else {\n    addQueueBtn.textContent = buttonStates.off + \" \" + storageKeys.queue;\n  }\n}\n\nexport function closeModal() {\n  document.querySelector(\".backdrop\").style.display = \"none\";\n  document.querySelector(\"body\").style.overflowY = \"visible\";\n  refreshLibrary();\n}\n\n//закриття модалки по кліку поза модалки\nwindow.addEventListener(\"click\", function (event) {\n  if (event.target === document.querySelector(\".backdrop\")) {\n    closeModal();\n  }\n});\n//закрытие модалки по esc\nwindow.addEventListener(\"keydown\", e => {\n  if (e.key === \"Escape\") {\n    closeModal();\n  }\n});\n\n/** Обробка натискання \"ADD TO WATCHED\" */\nfunction onAddWatchedBtn(event) {\n  addMovieToStorage(storageKeys.watched, currentMovie, addWatchedBtn);\n\n  if (btnState.watched) {\n    btnState.watched = false;\n    addWatchedBtn.classList.remove(\"active\");\n    addWatchedBtn.blur();\n  } else {\n    btnState.watched = true;\n    addWatchedBtn.classList.add(\"active\");\n  }\n}\n\n/** Обробка натискання \"ADD TO QUEUE\" */\nfunction onAddQueueBtn(event) {\n  addMovieToStorage(storageKeys.queue, currentMovie, addQueueBtn);\n\n  if (btnState.queue) {\n    btnState.queue = false;\n    addQueueBtn.classList.remove(\"active\");\n    addQueueBtn.blur();\n  } else {\n    btnState.queue = true;\n    addQueueBtn.classList.add(\"active\");\n  }\n}\n\nfunction addMovieToStorage(key, movie, button) {\n  let storageMoviesStr;\n  let movieStr;\n\n  try {\n    //console.log(\"currentMovie (modal): \" + JSON.stringify(movie.id));\n    storageMoviesStr = localStorage.getItem(key);\n    movieStr = JSON.stringify([movie]);\n\n    if (!storageMoviesStr) {\n      localStorage.setItem(key, movieStr);\n      button.textContent = buttonStates.on + \" \" + key;\n      button.classList.add(\"active\");\n      return;\n    }\n\n    let storageMoviesObj = JSON.parse(storageMoviesStr);\n\n    for (let i = 0; i < storageMoviesObj.length; i++) {\n      if (storageMoviesObj[i].id === movie.id) {\n        storageMoviesObj.splice(i, 1);\n        localStorage.setItem(key, JSON.stringify(storageMoviesObj));\n        button.textContent = buttonStates.off + \" \" + key;\n\n        return;\n      }\n    }\n\n    storageMoviesObj.push(movie);\n    localStorage.setItem(key, JSON.stringify(storageMoviesObj));\n    button.textContent = buttonStates.on + \" \" + key;\n  } catch (error) {\n    console.log(\"addMovieToStorage() error: \", error.message);\n  }\n}\n"],"names":["$a5bffc3352578c33$export$828461f224f6b5a8","$a5bffc3352578c33$export$c30aae9ef29dd78e","genreIDs","genres","parsedGenres","localStorage","getItem","JSON","parse","error","console","log","message","genresNames","i","length","genreID","map","genre","id","name","slice","$1cafa503bc57b7a0$var$KEY","$1cafa503bc57b7a0$export$c32a99f7fe334ced","$1cafa503bc57b7a0$var$refs","btnWatched","document","querySelector","btnQueue","btnList","libraryGallery","loader","noItemsImg","tuiContainer","getElementById","$1cafa503bc57b7a0$export$594cf5cf1eae6182","click","$1cafa503bc57b7a0$var$aferMovePagination","event","$1cafa503bc57b7a0$export$a584d38fda452a59","page","scrollSmooth","to","moviesForPagination","pageMovies","$1cafa503bc57b7a0$var$cutDataForPagination","imagesArray","innerHTML","image","poster_path","title","genre_ids","release_date","vote_average","releaseYear","toFixed","join","DataArray","totalCards","totalPages","Math","ceil","newDataArray","firstMovieOnPage","lastMovieOnPage","push","window","addEventListener","evt","key","tagName","target","toUpperCase","classList","add","remove","$eDhgr","getLocalStorage","style","display","$parcel$interopDefault","$fb9GJ","$1nDO6","paginationOptions","totalItems","on","$2631b5b1e00936b8$var$storageKeys","$2631b5b1e00936b8$var$buttonStates","$2631b5b1e00936b8$var$addWatchedBtn","$2631b5b1e00936b8$var$addQueueBtn","$2631b5b1e00936b8$var$storageHasMovie","storageKey","movieID","storageMoviesStr","storageMoviesObj","$2631b5b1e00936b8$var$addMovieToStorage","$2631b5b1e00936b8$export$a19cade83dd35204","$2631b5b1e00936b8$export$182734c8f92c67e3","watched","blur","queue","$2631b5b1e00936b8$export$3f6fecd573f3fa48","overflowY","movie","button","movieStr","stringify","setItem","textContent","splice","e","targetItem","closest","movieId","getAttribute","find","item","Number","srcPath","setAttribute","innerText","overview","vote_count","popularity","original_title","$2631b5b1e00936b8$export$a7f6cffb6b8ba11c"],"version":3,"file":"library.0ed985b7.js.map"}