{"mappings":"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","sources":["src/js/library.js","src/js/create-gallery-library.js","src/js/modal-library.js"],"sourcesContent":["import { createGalleryMarkupLibrary } from \"./create-gallery-library\";\nimport { getLocalStorage } from \"./LocaleStorageApi\";\n\nimport Pagination from \"tui-pagination\";\nimport { paginationOptions } from \"./projectOptions\";\nlet KEY = \"\";\nexport let moviesFromStorage = \"\";\nconst CARDS_PER_PAGE = 1000;\nconst refs = {\n  btnWatched: document.querySelector(\".watched\"),\n  btnQueue: document.querySelector(\".queue\"),\n  btnList: document.querySelector(\".library-header__buttons\"),\n  libraryGallery: document.querySelector(\".gallery\"),\n  loader: document.querySelector(\".loader\"),\n  noItemsImg: document.querySelector(\".library__no-items\"),\n  tuiContainer: document.getElementById(\"tui-pagination-container\"),\n};\n\nwindow.addEventListener(\"load\", () => {\n  refs.btnQueue.click();\n});\n\nrefs.btnList.addEventListener(\"click\", onBtnClick);\n\nfunction onBtnClick(evt) {\n  try {\n    let { name: key, tagName } = evt.target;\n    KEY = key.toUpperCase();\n    if (tagName !== \"BUTTON\") return;\n\n    switch (KEY) {\n      case \"QUEUE\":\n        refs.btnQueue.classList.add(\"library-header__button--active\");\n        refs.btnWatched.classList.remove(\"library-header__button--active\");\n        break;\n      case \"WATCHED\":\n        refs.btnWatched.classList.add(\"library-header__button--active\");\n        refs.btnQueue.classList.remove(\"library-header__button--active\");\n        break;\n      default:\n        break;\n    }\n\n    moviesFromStorage = getLocalStorage(KEY);\n    const totalCards = moviesFromStorage.length;\n    const totalPages = Math.ceil(totalCards / CARDS_PER_PAGE);\n    if (totalPages < 2) {\n      refs.tuiContainer.style.display = \"none\";\n    }\n\n    const paginaton = new Pagination(refs.tuiContainer, {\n      ...paginationOptions,\n      totalItems: totalPages,\n    });\n\n    paginaton.on(\"afterMove\", aferMovePagination);\n\n    if (!moviesFromStorage.length) {\n      refs.libraryGallery.innerHTML = \"\";\n      refs.noItemsImg.style.display = \"block\";\n      refs.loader.classList.add(\"is-hidden\");\n      return;\n    }\n\n    refs.loader.classList.add(\"is-hidden\");\n    refs.noItemsImg.style.display = \"none\";\n    const sliced = cutDataForPagination(moviesFromStorage);\n    makePagination((page = 1), sliced);\n  } catch (error) {\n    refs.libraryGallery.innerHTML = \"\";\n  } finally {\n    return KEY, moviesFromStorage;\n  }\n}\n\nexport function refreshLibrary() {\n  switch (KEY) {\n    case \"QUEUE\":\n      refs.btnQueue.click();\n      break;\n    case \"WATCHED\":\n      refs.btnWatched.click();\n      break;\n    default:\n      break;\n  }\n}\n\nfunction aferMovePagination(event) {\n  const currentPage = event.page;\n  makePagination(currentPage, moviesFromStorage);\n  scrollSmooth.to(0);\n}\n\nexport function makePagination(page = 1, moviesForPagination) {\n  const cuttedDataPagination = cutDataForPagination(moviesForPagination);\n  const pageMovies = cuttedDataPagination[0][page - 1];\n  createGalleryMarkupLibrary(pageMovies);\n}\n\nfunction cutDataForPagination(DataArray) {\n  const totalCards = moviesFromStorage.length;\n  const totalPages = Math.ceil(totalCards / CARDS_PER_PAGE);\n  let newDataArray = [];\n  for (let i = 0; i < totalPages; i += 1) {\n    const firstMovieOnPage = i * CARDS_PER_PAGE;\n    const lastMovieOnPage = (i + 1) * CARDS_PER_PAGE;\n    newDataArray.push(DataArray.slice([firstMovieOnPage], [lastMovieOnPage]));\n  }\n  return newDataArray;\n}\n","export const locStorage = {\n  genres: \"genres\",\n};\n\nexport const defaulPosterImg = \"https://i.ibb.co/1dYzZxK/Filmoteka-dummy.jpg\";\n\nexport function createGalleryMarkupLibrary(imagesArray) {\n  const refs = {\n    gallery: document.querySelector(\".gallery\"),\n  };\n\n  refs.gallery.innerHTML = imagesArray\n    .map(image => {\n      const { poster_path, title, genre_ids, release_date, id, vote_average } =\n        image;\n      const releaseYear = release_date ? release_date.slice(0, 4) : \" No year\";\n\n      //Встановлення заглушки для постеру\n      const srcPath =\n        poster_path === null\n          ? defaulPosterImg\n          : `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n      return `\n               <div class=\"card\" movie-id=\"${id}\">\n               <img class=\"card__poster\"  src=${srcPath} alt\n               =\"poster movie ${title}\"  loading=\"lazy\" width=\"320px\" height=\"210px\" />\n                    <div  class=\"card__info\">\n                        <p class=\"info__title\"><b>${title}</b><br/>\n                        </p>\n                        <p ><b class=\"info__genre\">${getGenreNames(\n                          genre_ids\n                        )}</b>\n                       <span class=\"info__span\"> | </span>\n                        <b class=\"info__release-date\">${releaseYear}</b>\n                      <span class=\"info__vote_average\">${vote_average.toFixed(\n                        1\n                      )}</span>\n                        </p>\n                    </div>\n                </div>\n            `;\n    })\n    .join(\"\");\n}\n\n/**Повертає імена жанрів за вказаними номерами */\nexport function getGenreNames(genreIDs) {\n  let genres;\n  let parsedGenres;\n  try {\n    genres = localStorage.getItem(locStorage.genres);\n    parsedGenres = JSON.parse(genres);\n  } catch (error) {\n    console.log(\"getGenreNames() error: \", error.message);\n  }\n\n  let genresNames = \"\";\n  for (let i = 0; i < genreIDs.length; i++) {\n    const genreID = genreIDs[i];\n\n    if (i > 1) {\n      genresNames += \"Other\";\n      return genresNames;\n    }\n\n    parsedGenres.map(genre => {\n      if (genreID === genre.id) {\n        genresNames += genre.name + \", \";\n      }\n    });\n  }\n  return genresNames.slice(0, -2);\n}\n","import { moviesFromStorage } from \"./library\";\nimport { getGenreNames } from \"./create-gallery-library\";\n\nconst storageKeys = {\n  watched: \"WATCHED\",\n  queue: \"QUEUE\",\n};\nconst buttonStates = {\n  on: \"REMOVE FROM\",\n  off: \"ADD TO\",\n};\n\nconst addWatchedBtn = document.querySelector(\".watched-btn\");\nconst addQueueBtn = document.querySelector(\".queue-btn\");\n\naddWatchedBtn.addEventListener(\"click\", onAddWatchedBtn);\naddQueueBtn.addEventListener(\"click\", onAddQueueBtn);\n\nfunction storageHasMovie(storageKey, movieID) {\n  let storageMoviesStr;\n  try {\n    storageMoviesStr = localStorage.getItem(storageKey);\n    //Якщо сховище не пусте\n    if (storageMoviesStr) {\n      let storageMoviesObj = JSON.parse(storageMoviesStr);\n\n      for (let i = 0; i < storageMoviesObj.length; i++) {\n        if (storageMoviesObj[i].id === movieID) {\n          return true;\n        }\n      }\n    }\n  } catch (error) {\n    console.log(\"storageHasMovie() error: \" + error);\n  }\n  return false;\n}\n\nimport { refreshLibrary } from \"./library\";\n\nexport let btnState = {\n  watched: false,\n  queue: false,\n};\nexport let currentMovie;\n\nconst refs = {\n  libraryGallery: document.querySelector(\".gallery\"),\n};\n\nrefs.libraryGallery.addEventListener(\"click\", handleDataModal);\ndocument.querySelector(\".modal__close\").addEventListener(\"click\", closeModal);\n\nexport function handleDataModal(e) {\n  const defaulPosterImg = \"https://i.ibb.co/1dYzZxK/Filmoteka-dummy.jpg\";\n  let targetItem = e.target;\n  if (targetItem.closest(\".card\")) {\n    const movieId = targetItem.closest(\".card\").getAttribute(\"movie-id\");\n    const data = moviesFromStorage;\n    const movie = data.find(item => {\n      if (Number(movieId) === item.id) {\n        return true;\n      }\n    });\n    currentMovie = movie;\n\n    const srcPath =\n      movie.poster_path === null\n        ? defaulPosterImg\n        : `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n    document\n      .querySelector(\".content-card__img>img\")\n      .setAttribute(\"src\", srcPath);\n    document.querySelector(\".content-card__title\").innerText = movie.title;\n    document.querySelector(\".content-card__about-text\").innerText =\n      movie.overview;\n\n    document.querySelector(\".modal__movie-bord\").innerText =\n      movie.vote_average.toFixed(1);\n    document.querySelector(\".modal__movie-number\").innerText = movie.vote_count;\n    document.querySelector(\".modal__movie-popularity\").innerText =\n      movie.popularity.toFixed(1);\n    document.querySelector(\".modal__movie-original\").innerText =\n      movie.original_title;\n    document.querySelector(\".modal__movie-genres\").innerText = getGenreNames(\n      movie.genre_ids\n    );\n\n    openModal();\n  }\n}\n\n// открытие модалки\n// =====================================\nexport function openModal() {\n  document.querySelector(\".backdrop\").style.display = \"block\";\n  document.querySelector(\"body\").style.overflowY = \"hidden\";\n\n  //Встановлення тексту кнопки \"ADD TO WATCHED\"\n  if (storageHasMovie(storageKeys.watched, currentMovie.id)) {\n    addWatchedBtn.textContent = buttonStates.on + \" \" + storageKeys.watched;\n  } else {\n    addWatchedBtn.textContent = buttonStates.off + \" \" + storageKeys.watched;\n  }\n\n  //Встановлення тексту кнопки \"ADD TO QUEUE\"\n  if (storageHasMovie(storageKeys.queue, currentMovie.id)) {\n    addQueueBtn.textContent = buttonStates.on + \" \" + storageKeys.queue;\n  } else {\n    addQueueBtn.textContent = buttonStates.off + \" \" + storageKeys.queue;\n  }\n}\n\nexport function closeModal() {\n  document.querySelector(\".backdrop\").style.display = \"none\";\n  document.querySelector(\"body\").style.overflowY = \"visible\";\n  refreshLibrary();\n}\n\n//закриття модалки по кліку поза модалки\nwindow.addEventListener(\"click\", function (event) {\n  if (event.target === document.querySelector(\".backdrop\")) {\n    closeModal();\n  }\n});\n//закрытие модалки по esc\nwindow.addEventListener(\"keydown\", e => {\n  if (e.key === \"Escape\") {\n    closeModal();\n  }\n});\n\n/** Обробка натискання \"ADD TO WATCHED\" */\nfunction onAddWatchedBtn(event) {\n  addMovieToStorage(storageKeys.watched, currentMovie, addWatchedBtn);\n\n  if (btnState.watched) {\n    btnState.watched = false;\n    addWatchedBtn.classList.remove(\"active\");\n    addWatchedBtn.blur();\n  } else {\n    btnState.watched = true;\n    addWatchedBtn.classList.add(\"active\");\n  }\n}\n\n/** Обробка натискання \"ADD TO QUEUE\" */\nfunction onAddQueueBtn(event) {\n  addMovieToStorage(storageKeys.queue, currentMovie, addQueueBtn);\n\n  if (btnState.queue) {\n    btnState.queue = false;\n    addQueueBtn.classList.remove(\"active\");\n    addQueueBtn.blur();\n  } else {\n    btnState.queue = true;\n    addQueueBtn.classList.add(\"active\");\n  }\n}\n\nfunction addMovieToStorage(key, movie, button) {\n  let storageMoviesStr;\n  let movieStr;\n\n  try {\n    //console.log(\"currentMovie (modal): \" + JSON.stringify(movie.id));\n    storageMoviesStr = localStorage.getItem(key);\n    movieStr = JSON.stringify([movie]);\n\n    if (!storageMoviesStr) {\n      localStorage.setItem(key, movieStr);\n      button.textContent = buttonStates.on + \" \" + key;\n      button.classList.add(\"active\");\n      return;\n    }\n\n    let storageMoviesObj = JSON.parse(storageMoviesStr);\n\n    for (let i = 0; i < storageMoviesObj.length; i++) {\n      if (storageMoviesObj[i].id === movie.id) {\n        storageMoviesObj.splice(i, 1);\n        localStorage.setItem(key, JSON.stringify(storageMoviesObj));\n        button.textContent = buttonStates.off + \" \" + key;\n\n        return;\n      }\n    }\n\n    storageMoviesObj.push(movie);\n    localStorage.setItem(key, JSON.stringify(storageMoviesObj));\n    button.textContent = buttonStates.on + \" \" + key;\n  } catch (error) {\n    console.log(\"addMovieToStorage() error: \", error.message);\n  }\n}\n"],"names":["$dDDEV","parcelRequire","$l5bVx","$2c3b3aacd0fe4ad1$export$828461f224f6b5a8","$2c3b3aacd0fe4ad1$export$d81c3514e5dca718","imagesArray","gallery","document","querySelector","innerHTML","map","image","poster_path","title","genre_ids","release_date","id","vote_average","releaseYear","slice","srcPath","concat","$2c3b3aacd0fe4ad1$export$c30aae9ef29dd78e","toFixed","join","genreIDs","genres","parsedGenres","genreID","i","genresNames","genre","name","localStorage","getItem","JSON","parse","error","console","log","message","i1","length","$93effc6fc56091ad$var$KEY","$93effc6fc56091ad$export$c32a99f7fe334ced","$93effc6fc56091ad$var$CARDS_PER_PAGE","$93effc6fc56091ad$var$refs","btnWatched","btnQueue","btnList","libraryGallery","loader","noItemsImg","tuiContainer","getElementById","$93effc6fc56091ad$export$594cf5cf1eae6182","click","$93effc6fc56091ad$var$aferMovePagination","event","$93effc6fc56091ad$export$a584d38fda452a59","page","scrollSmooth","to","arguments","moviesForPagination","cuttedDataPagination","$93effc6fc56091ad$var$cutDataForPagination","pageMovies","DataArray","totalCards","totalPages","Math","ceil","newDataArray","firstMovieOnPage","lastMovieOnPage","push","window","addEventListener","evt","_target","target","key","tagName","toUpperCase","classList","add","remove","$b6Xps","getLocalStorage","style","display","$parcel$interopDefault","$1VFfL","$2XzsB","paginationOptions","totalItems","on","sliced","$5274909fd9dfb2b1$var$storageKeys","$5274909fd9dfb2b1$var$buttonStates","$5274909fd9dfb2b1$var$addWatchedBtn","$5274909fd9dfb2b1$var$addQueueBtn","$5274909fd9dfb2b1$var$storageHasMovie","storageKey","movieID","storageMoviesStr","storageMoviesObj","$5274909fd9dfb2b1$var$addMovieToStorage","$5274909fd9dfb2b1$export$a19cade83dd35204","$5274909fd9dfb2b1$export$182734c8f92c67e3","watched","blur","queue","$5274909fd9dfb2b1$export$3f6fecd573f3fa48","overflowY","movie","button","movieStr","stringify","setItem","textContent","splice","e","targetItem","closest","movieId","getAttribute","find","item","Number","setAttribute","innerText","overview","vote_count","popularity","original_title","$5274909fd9dfb2b1$export$a7f6cffb6b8ba11c"],"version":3,"file":"library.56bafb72.js.map"}