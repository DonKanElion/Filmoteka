{"mappings":"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","sources":["src/js/create-gallery-library.js","src/js/library.js","src/js/modal-library.js"],"sourcesContent":["export const locStorage = {\n  genres: 'genres',\n};\n\nexport const defaulPosterImg = 'https://i.ibb.co/1dYzZxK/Filmoteka-dummy.jpg';\n\nexport function createGalleryMarkupLibrary(imagesArray) {\n  const refs = {\n    gallery: document.querySelector('.gallery'),\n  };\n\n  refs.gallery.innerHTML = imagesArray\n    .map(image => {\n      const { poster_path, title, genre_ids, release_date, id, vote_average } =\n        image;\n      const releaseYear = release_date ? release_date.slice(0, 4) : ' No year';\n\n      //Встановлення заглушки для постеру\n      const srcPath =\n        poster_path === null\n          ? defaulPosterImg\n          : `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n      return `\n               <div class=\"card\" movie-id=\"${id}\">\n               <img class=\"card__poster\"  src=${srcPath} alt\n               =\"poster movie ${title}\"  loading=\"lazy\" width=\"320px\" height=\"210px\" />\n                    <div  class=\"card__info\">\n                        <p class=\"info__title\"><b>${title}</b><br/>\n                        </p>\n                        <p ><b class=\"info__genre\">${getGenreNames(\n                          genre_ids\n                        )}</b>\n                       <span class=\"info__span\"> | </span>\n                        <b class=\"info__release-date\">${releaseYear}</b>\n                      <span class=\"info__vote_average\">${vote_average.toFixed(\n                        1\n                      )}</span>\n                                              </p>\n                    </div>\n                </div>\n            `;\n    })\n    .join('');\n}\n\n/**Повертає імена жанрів за вказаними номерами */\nexport function getGenreNames(genreIDs) {\n  let genres;\n  let parsedGenres;\n  try {\n    genres = localStorage.getItem(locStorage.genres);\n    parsedGenres = JSON.parse(genres);\n  } catch (error) {\n    console.log('getGenreNames() error: ', error.message);\n  }\n\n  let genresNames = '';\n  for (let i = 0; i < genreIDs.length; i++) {\n    const genreID = genreIDs[i];\n\n    if (i > 1) {\n      genresNames += 'Other';\n      return genresNames;\n    }\n\n    parsedGenres.map(genre => {\n      if (genreID === genre.id) {\n        genresNames += genre.name + ', ';\n      }\n    });\n  }\n  return genresNames.slice(0, -2);\n}\n","import { createGalleryMarkupLibrary } from './create-gallery-library';\nimport { getLocalStorage } from './LocaleStorageApi';\n\n// import Pagination from 'tui-pagination';\n// import { paginationOptions } from './projectOptions';\nlet KEY = '';\nexport let MoviesFromStorage = '';\nconst CARDS_PER_PAGE = 1000;\nconst refs = {\n  btnWatched: document.querySelector('.watched'),\n  btnQueue: document.querySelector('.queue'),\n  btnList: document.querySelector('.library-header__buttons'),\n  libraryGallery: document.querySelector('.gallery'),\n  loader: document.querySelector('.loader'),\n  noItemsImg: document.querySelector('.library__no-items'),\n  // tuiContainer: document.getElementById('tui-pagination-container'),\n};\n\nwindow.addEventListener('load', () => {\n  refs.btnQueue.click();\n});\n\nrefs.btnList.addEventListener('click', onBtnClick);\n\nfunction onBtnClick(evt) {\n  let { name: key, tagName } = evt.target;\n  KEY = key.toUpperCase();\n  if (tagName !== 'BUTTON') return;\n\n  switch (KEY) {\n    case 'QUEUE':\n      refs.btnQueue.classList.add('library-header__button--active');\n      refs.btnWatched.classList.remove('library-header__button--active');\n      break;\n    case 'WATCHED':\n      refs.btnWatched.classList.add('library-header__button--active');\n      refs.btnQueue.classList.remove('library-header__button--active');\n      break;\n    default:\n      break;\n  }\n\n  MoviesFromStorage = getLocalStorage(KEY);\n  const totalCards = MoviesFromStorage.length;\n  const totalPages = Math.ceil(totalCards / CARDS_PER_PAGE);\n\n  // const paginaton = new Pagination(refs.tuiContainer, {\n  //   ...paginationOptions,\n  //   totalItems: totalPages,\n  // });\n\n  // paginaton.on('afterMove', aferMovePagination);\n\n  if (!MoviesFromStorage.length) {\n    refs.libraryGallery.innerHTML = '';\n    refs.noItemsImg.style.display = 'block';\n    return;\n  }\n\n  try {\n    refs.loader.classList.add('is-hidden');\n    refs.noItemsImg.style.display = 'none';\n    const sliced = cutDataForPagination(MoviesFromStorage);\n    makePagination((page = 1), sliced);\n  } catch (error) {\n    refs.libraryGallery.innerHTML = '';\n  } finally {\n    return KEY, MoviesFromStorage;\n  }\n}\n\nexport function refreshLibrary() {\n  switch (KEY) {\n    case 'QUEUE':\n      refs.btnQueue.click();\n      break;\n    case 'WATCHED':\n      refs.btnWatched.click();\n      break;\n    default:\n      break;\n  }\n}\n\nfunction aferMovePagination(event) {\n  const currentPage = event.page;\n  makePagination(currentPage, MoviesFromStorage);\n  scrollSmooth.to(0);\n}\n\nexport function makePagination(page = 1, moviesForPagination) {\n  const cuttedDataPagination = cutDataForPagination(moviesForPagination);\n  const pageMovies = cuttedDataPagination[0][page - 1];\n  createGalleryMarkupLibrary(pageMovies);\n}\n\nfunction cutDataForPagination(DataArray) {\n  const totalCards = MoviesFromStorage.length;\n  const totalPages = Math.ceil(totalCards / CARDS_PER_PAGE);\n\n  let newDataArray = [];\n\n  for (let i = 0; i < totalPages; i += 1) {\n    const firstMovieOnPage = i * CARDS_PER_PAGE;\n    const lastMovieOnPage = (i + 1) * CARDS_PER_PAGE;\n    newDataArray.push(DataArray.slice([firstMovieOnPage], [lastMovieOnPage]));\n  }\n  return newDataArray;\n}\n","import { MoviesFromStorage } from './library';\nimport { getGenreNames } from './create-gallery-library';\n\nconst storageKeys = {\n  watched: 'WATCHED',\n  queue: 'QUEUE',\n};\nconst buttonStates = {\n  on: 'REMOVE FROM',\n  off: 'ADD TO',\n};\n\nconst addWatchedBtn = document.querySelector('.watched-btn');\nconst addQueueBtn = document.querySelector('.queue-btn');\n\naddWatchedBtn.addEventListener('click', onAddWatchedBtn);\naddQueueBtn.addEventListener('click', onAddQueueBtn);\n\nfunction storageHasMovie(storageKey, movieID) {\n  let storageMoviesStr;\n  try {\n    storageMoviesStr = localStorage.getItem(storageKey);\n    //Якщо сховище не пусте\n    if (storageMoviesStr) {\n      let storageMoviesObj = JSON.parse(storageMoviesStr);\n\n      for (let i = 0; i < storageMoviesObj.length; i++) {\n        if (storageMoviesObj[i].id === movieID) {\n          return true;\n        }\n      }\n    }\n  } catch (error) {\n    console.log('storageHasMovie() error: ' + error);\n  }\n  return false;\n}\n\nimport { refreshLibrary } from './library';\n\nexport let btnState = {\n  watched: false,\n  queue: false,\n};\nexport let currentMovie;\n\nconst refs = {\n  libraryGallery: document.querySelector('.gallery'),\n};\n\nrefs.libraryGallery.addEventListener('click', handleDataModal);\ndocument.querySelector('.modal__close').addEventListener('click', closeModal);\n\nexport function handleDataModal(e) {\n  const defaulPosterImg = 'https://i.ibb.co/1dYzZxK/Filmoteka-dummy.jpg';\n  let targetItem = e.target;\n  if (targetItem.closest('.card')) {\n    const movieId = targetItem.closest('.card').getAttribute('movie-id');\n    const data = MoviesFromStorage;\n    const movie = data.find(item => {\n      if (Number(movieId) === item.id) {\n        return true;\n      }\n    });\n    currentMovie = movie;\n\n    const srcPath =\n      movie.poster_path === null\n        ? defaulPosterImg\n        : `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n    document\n      .querySelector('.content-card__img>img')\n      .setAttribute('src', srcPath);\n    document.querySelector('.content-card__title').innerText = movie.title;\n    document.querySelector('.content-card__about-text').innerText =\n      movie.overview;\n\n    document.querySelector('.modal__movie-bord').innerText =\n      movie.vote_average.toFixed(1);\n    document.querySelector('.modal__movie-number').innerText = movie.vote_count;\n    document.querySelector('.modal__movie-popularity').innerText =\n      movie.popularity.toFixed(1);\n    document.querySelector('.modal__movie-original').innerText =\n      movie.original_title;\n    document.querySelector('.modal__movie-genres').innerText = getGenreNames(\n      movie.genre_ids\n    );\n\n    openModal();\n  }\n}\n\n// открытие модалки\n// =====================================\nexport function openModal() {\n  document.querySelector('.backdrop').style.display = 'block';\n  document.querySelector('body').style.overflowY = 'hidden';\n\n  //Встановлення тексту кнопки \"ADD TO WATCHED\"\n  if (storageHasMovie(storageKeys.watched, currentMovie.id)) {\n    addWatchedBtn.textContent = buttonStates.on + ' ' + storageKeys.watched;\n  } else {\n    addWatchedBtn.textContent = buttonStates.off + ' ' + storageKeys.watched;\n  }\n\n  //Встановлення тексту кнопки \"ADD TO QUEUE\"\n  if (storageHasMovie(storageKeys.queue, currentMovie.id)) {\n    addQueueBtn.textContent = buttonStates.on + ' ' + storageKeys.queue;\n  } else {\n    addQueueBtn.textContent = buttonStates.off + ' ' + storageKeys.queue;\n  }\n}\n\nexport function closeModal() {\n  document.querySelector('.backdrop').style.display = 'none';\n  document.querySelector('body').style.overflowY = 'visible';\n  refreshLibrary();\n}\n\n//закриття модалки по кліку поза модалки\nwindow.addEventListener('click', function (event) {\n  if (event.target === document.querySelector('.backdrop')) {\n    closeModal();\n  }\n});\n//закрытие модалки по esc\nwindow.addEventListener('keydown', e => {\n  if (e.key === 'Escape') {\n    closeModal();\n  }\n});\n\n/** Обробка натискання \"ADD TO WATCHED\" */\nfunction onAddWatchedBtn(event) {\n  addMovieToStorage(storageKeys.watched, currentMovie, addWatchedBtn);\n\n  if (btnState.watched) {\n    btnState.watched = false;\n    addWatchedBtn.classList.remove('active');\n    addWatchedBtn.blur();\n  } else {\n    btnState.watched = true;\n    addWatchedBtn.classList.add('active');\n  }\n}\n\n/** Обробка натискання \"ADD TO QUEUE\" */\nfunction onAddQueueBtn(event) {\n  addMovieToStorage(storageKeys.queue, currentMovie, addQueueBtn);\n\n  if (btnState.queue) {\n    btnState.queue = false;\n    addQueueBtn.classList.remove('active');\n    addQueueBtn.blur();\n  } else {\n    btnState.queue = true;\n    addQueueBtn.classList.add('active');\n  }\n}\n\nfunction addMovieToStorage(key, movie, button) {\n  let storageMoviesStr;\n  let movieStr;\n\n  try {\n    //console.log(\"currentMovie (modal): \" + JSON.stringify(movie.id));\n    storageMoviesStr = localStorage.getItem(key);\n    movieStr = JSON.stringify([movie]);\n\n    if (!storageMoviesStr) {\n      localStorage.setItem(key, movieStr);\n      button.textContent = buttonStates.on + ' ' + key;\n      button.classList.add('active');\n      return;\n    }\n\n    let storageMoviesObj = JSON.parse(storageMoviesStr);\n\n    for (let i = 0; i < storageMoviesObj.length; i++) {\n      if (storageMoviesObj[i].id === movie.id) {\n        storageMoviesObj.splice(i, 1);\n        localStorage.setItem(key, JSON.stringify(storageMoviesObj));\n        button.textContent = buttonStates.off + ' ' + key;\n\n        return;\n      }\n    }\n\n    storageMoviesObj.push(movie);\n    localStorage.setItem(key, JSON.stringify(storageMoviesObj));\n    button.textContent = buttonStates.on + ' ' + key;\n  } catch (error) {\n    console.log('addMovieToStorage() error: ', error.message);\n  }\n}\n"],"names":["$a5bffc3352578c33$export$828461f224f6b5a8","$a5bffc3352578c33$export$c30aae9ef29dd78e","genreIDs","genres","parsedGenres","localStorage","getItem","JSON","parse","error","console","log","message","genresNames","i","length","genreID","map","genre","id","name","slice","$1cafa503bc57b7a0$var$KEY","$1cafa503bc57b7a0$export$322ce83e3b07df47","$1cafa503bc57b7a0$var$refs","btnWatched","document","querySelector","btnQueue","btnList","libraryGallery","loader","noItemsImg","$1cafa503bc57b7a0$export$594cf5cf1eae6182","click","$1cafa503bc57b7a0$export$a584d38fda452a59","page","moviesForPagination","pageMovies","$1cafa503bc57b7a0$var$cutDataForPagination","imagesArray","innerHTML","image","poster_path","title","genre_ids","release_date","vote_average","releaseYear","toFixed","join","DataArray","totalCards","totalPages","Math","ceil","newDataArray","firstMovieOnPage","lastMovieOnPage","push","window","addEventListener","evt","key","tagName","target","toUpperCase","classList","add","remove","$eDhgr","getLocalStorage","style","display","sliced","$2631b5b1e00936b8$var$storageKeys","$2631b5b1e00936b8$var$buttonStates","$2631b5b1e00936b8$var$addWatchedBtn","$2631b5b1e00936b8$var$addQueueBtn","$2631b5b1e00936b8$var$storageHasMovie","storageKey","movieID","storageMoviesStr","storageMoviesObj","event","$2631b5b1e00936b8$var$addMovieToStorage","$2631b5b1e00936b8$export$a19cade83dd35204","$2631b5b1e00936b8$export$182734c8f92c67e3","watched","blur","queue","$2631b5b1e00936b8$export$3f6fecd573f3fa48","overflowY","movie","button","movieStr","stringify","setItem","textContent","splice","e","targetItem","closest","movieId","getAttribute","find","item","Number","srcPath","setAttribute","innerText","overview","vote_count","popularity","original_title","$2631b5b1e00936b8$export$a7f6cffb6b8ba11c"],"version":3,"file":"library.e7cbc15e.js.map"}